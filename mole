#!/bin/bash

usage() { printf " mole [-g GROUP] FILE\n mole [-m] [FILTERS] [DIRECTORY]\n mole list [FILTERS] [DIRECTORY]\n mole secret-log [-b DATE] [-a DATE] [DIRECTORY1 [DIRECTORY2 [...]]\n" 1>&2; exit 0; }
# check_groups() {

# }
write_a_record() {
    # if [ "$(awk -F ';' -v file="$(realpath -s "$1")" '{if (file==$1) {print}}' "$MOLE_RC")" = "" ]
    temp="$(grep -m 1 "$1;$2" "$MOLE_RC")"
    if [ "$temp" = "" ] # rewrite this using -n
    then
        echo "$1;$2;$3;$4" >> "$MOLE_RC"
    else
        # groupsold="$(echo "$temp" | cut -d ';' -f 2)"
        # groupsnew="$(echo "$temp" | awk -F ';' '{print $2}'),$2"
        # grep -o -m 1 "$3"
        if [ "$3" = "" ] || [ "$(echo "$temp" | cut -d ";" -f 3 | awk -F "," -v '')" != "" ]
        then
            sed -i "s#$temp#$temp;$4#" "$MOLE_RC"
        else
            # if [ "$(echo "$temp" | cut -d ";" -f 2 | grep -o -m 1 "$2")" != "" ]
            # then
            #     sed -i "s#$temp#$temp;$(date "+%Y-%m-%d_%H-%M-%S")#" "$MOLE_RC"    
            # else
            #     groupsnew="$(echo "$temp" | cut -d ";" -f 2),$2"
            #     sed -i "s#$temp#$(echo "$temp"|cut -d ";" -f 1);$groupsnew;$(echo "$temp"|cut -d ";" -f 3);$(date "+%Y-%m-%d_%H-%M-%S")#" "$MOLE_RC"
            # fi
            groupsnew="$3,$(echo "$temp" | cut -d ";" -f 3)"
            sed -i "s#$temp#$(echo "$temp"|cut -d ";" -f 1-2);$groupsnew;$(echo "$temp"|cut -d ";" -f 4-);$4#" "$MOLE_RC"
        fi
        # temp="$(grep -o -m 1 "$(realpath -s "$1")" "$MOLE_RC")"
        # temp=$(awk -v file="$(realpath -s "$1")" -v newdate="$(date "+%Y-%m-%d_%H-%M-%S")" 'BEGIN{FS=OFS=";"}{if (file==$1) {print $0,newdate; next} print $0}' "$MOLE_RC")
        # echo "$temp" > "$MOLE_RC"
    fi
}
open_file_from_dir() {
    # grep "$1" "$MOLE_RC"

    awk -v file="$1" 'BEGIN{FS=OFS=";"} {if ($1==file) {print $0}}' "$MOLE_RC" | awk 'BEGIN{FS=OFS=";"; mindate["date"]=0; mindate["file"]="";} {if (NR==1) {mindate["date"]=$(NF); mindate["file"]=$2;}; if (mindate["date"] < $(NF)) {mindate["date"]=$(NF); mindate["file"]=$2}} END{print mindate["file"]}'

    # awk -v file="$1" 'BEGIN{FS=OFS=";"; mindate["date"]=0; mindate["file"]="";} {if (NR==0) {mindate["date"]=$NF; mindate["file"]=$1;}; if (file==$1) {print $0,newdate; next} print $0}' "$MOLE_RC"
}
open_file_from_dir_most_freq() {
    awk -v file="$1" 'BEGIN{FS=OFS=";"} {if ($1==file) {print $0}}' "$MOLE_RC" | awk 'BEGIN{FS=OFS=";"; mindate["amount"]=0; mindate["file"]="";} {if (NR==1) {mindate["amount"]=NF; mindate["file"]=$2;}; if (mindate["amount"] < NF) {mindate["amount"]=NF; mindate["file"]=$2}} END{print mindate["file"]}'
}

if [ "$MOLE_RC" = "" ]
then
    echo "MOLE_RC not set"
    exit 2
fi

while getopts ":hmg:" argum; do
    case "${argum}" in
        h)
            usage
            ;;
        g)
            groups="${OPTARG}"
            ;;
        m)
            recentlyflag="true"
            ;;
        *)
            echo "Invalid options selected. Use -h for help." 1>&2
            exit 1
            ;;
    esac
done
shift "$((OPTIND-1))"


if [ "$1" == "" ]
then
    filename="$(pwd)"
else
    filename="$(realpath -s "$1")"
fi


if [ "$(find "$filename" -type d -maxdepth 0 -exec echo dir \; 2>/dev/null)" == "" ]
then
    # echo 'maps.google.com' | awk -F. '{print $NF}'
    # grep -o '[^,]*$'
    filepath="$(echo "$filename" | rev | cut -d'/' -f 2- | rev)"
    onlyfilename="$(echo "$filename" | rev | cut -d'/' -f 1 | rev)"
    write_a_record "$filepath" "$onlyfilename" "$groups" "$(date "+%Y-%m-%d_%H-%M-%S")"
    vim "$filename"
else
    if [ "$recentlyflag" != "" ]
    then
        open_file_from_dir_most_freq "$filename"
        vim "$filename"
    else
        open_file_from_dir "$filename"
        vim "$filename"
    fi
fi

# awk -F ';' -v dateA="2023-03-12" '{if (dateA>=$3) {print}}' "$MOLE_RC"